Classification

Heartbeat types: ["N","L","R","A","a","J","S","V","F","e","j","E"]
Trained with samples generated by DCGAN

Model: Deep Convolutional Neural Network

#----------------------------------------------------------------------------------------------#

class DCClassifier(nn.Module):
	def __init__(self,num_types):
		super(DCClassifier,self).__init__()
		self.main=nn.Sequential(
			nn.Conv1d(1,64,4,2,1,bias=False),
			nn.LeakyReLU(0.2,inplace=True),
			nn.Conv1d(64,128,4,2,1,bias=False),
			nn.BatchNorm1d(128),
			nn.LeakyReLU(0.2,inplace=True),
			nn.Conv1d(128,256,4,2,1,bias=False),
			nn.BatchNorm1d(256),
			nn.LeakyReLU(0.2,inplace=True),
			nn.Conv1d(256,512,4,2,1,bias=False),
			nn.BatchNorm1d(512),
			nn.LeakyReLU(0.2,inplace=True),
			nn.Conv1d(512,1024,4,2,1,bias=False),
			nn.BatchNorm1d(1024),
			nn.LeakyReLU(0.2,inplace=True),
			nn.Flatten(),
			nn.Linear(6144,num_types),
			nn.Sigmoid(),
		)

	def forward(self,x):
		x=x.view(-1,1,216)
		return self.main(x)

#----------------------------------------------------------------------------------------------#

Optimizer: Adam
Learning rate: 0.0002
Betas: (0.5,0.999)

Loss: BCELoss (Binary cross entropy loss)

Batch size: 240
Training steps (steps of one batch): 3000